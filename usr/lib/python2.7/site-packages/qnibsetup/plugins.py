#! /usr/bin/env python
# -*- coding: utf-8 -*-

# load librarys
import socket
import time

import etcd
import netifaces


__author__    = 'Christian Kniep <christian()qnib.org>'
__copyright__ = 'Copyright 2014 Christian Kniep'
__license__   = """MIT License (http://opensource.org/licenses/MIT)"""


def qsetup_carbon(_, srv_hosts):
    """ setup the carbon related services (diamond)
    """
    pass


def qsetup_dns(_, srv_hosts):
    """ setup the dns related service (?)
    """
    pass


def qsetup_etcd(_, srv_hosts):
    """ setup the etcd service
    """
    my_ipv4 = netifaces.ifaddresses('eth0')[netifaces.AF_INET][0]['addr']
    my_ipv6 = netifaces.ifaddresses('eth0')[netifaces.AF_INET6][0]['addr']
    try:
        my_ipv6 = my_ipv6.split("%")[0]
    except:
        pass
    my_host = socket.gethostname()
    ptr_key = "/helix/arpa/in-addr/%s/PTR" % my_ipv4.replace(".", "/")
    a_key = "/helix/%s/A" % my_host
    aaaa_key = "/helix/%s/AAAA" % my_host
    for srv_host in srv_hosts:
        client = etcd.Client(host=srv_host)
        # set A record
        client.write(a_key, my_ipv4)
        # set AAAA record
        client.write(aaaa_key, my_ipv6)
        # set PTR record
        client.write(ptr_key, "%s." % my_host)
        # trigger update
        client.write("/update_helix", int(time.time()))

